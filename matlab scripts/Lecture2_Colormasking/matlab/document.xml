<?xml version="1.0" encoding="UTF-8"?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="left"/></w:pPr><w:r><w:t>DESN1000 MATLAB Exercise 1 for Week 4</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Complete the task by filling in the missing pieces of the script.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Using MATLAB, load and display the image ‘fruit.jpg’. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[fruit = imread('fruit.jpg');
imshow(fruit)]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>In this exercise, we will try to extract the lemons out of the picture. Open the image in a new figure window (button on the top right of the output). Using the ‘Data Tips’ tool within the figure, find the R, G and B values which approximately define the lime green colour at [X,Y] = [291,159]</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[R = 227;
G = 189;
B = 82; ]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Create a mask called 'mask' which indicates all pixels with a blue value of exactly B. Show the image.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[mask = fruit(:,:,3) == 82;
imshow(mask);]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>This mask is of little use. Instead of searching for axact values, we should search for a range of values. Use '&lt;' and '&gt;' to create two different conditions to search for (that is, an upper and lower limit on red values). Create a new mask by combining these two conditions (hint: mask = (condition1)&amp;(condition2)). Use your judgement to adjust these limits.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[mask = (fruit(:,:,3) < 100)&(fruit(:,:,3) > 70);
imshow(mask)]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>You will notice that some other fruits are included, which is not ideal. Now, repeat the process for green and red. Combine all your conditions into one mask. I managed to capture both lemons using:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>(fruit(:,:,1) &lt;= 255)&amp;(fruit(:,:,1) &gt;= 200)&amp;(fruit(:,:,2) &lt;= 230)&amp;(fruit(:,:,2) &gt;= 170)&amp;(fruit(:,:,3) &lt;= 95)&amp;(fruit(:,:,3) &gt;= 0);</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>See if you can do better!</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[mask = (fruit(:,:,1) <= 255)&(fruit(:,:,1) >= 200)&(fruit(:,:,2) <= 230)&(fruit(:,:,2) >= 170)&(fruit(:,:,3) <= 95)&(fruit(:,:,3) >= 0);
imshow(mask)
]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>At this stage, we want to fill any black gaps that might exist in our mask. To do this, create a disk-shaped </w:t></w:r><w:hyperlink w:docLocation="https://au.mathworks.com/help/images/ref/strel.html"><w:r><w:t>structuring element</w:t></w:r></w:hyperlink><w:r><w:t> and perform a </w:t></w:r><w:hyperlink w:docLocation="https://au.mathworks.com/help/images/ref/imclose.html"><w:r><w:t>morphological closing</w:t></w:r></w:hyperlink><w:r><w:t> operation. Try to play around with the size of the disk, and see how it affects the result.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[se = strel('disk',7);
mask = imclose(mask,se);
imshow(mask)]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Once you have a nice-looking circle in the mask, you will notice that there are some other small artifacts in the mask. Remove these using </w:t></w:r><w:hyperlink w:docLocation="https://au.mathworks.com/help/images/ref/bwareaopen.html"><w:r><w:t>bwareaopen</w:t></w:r></w:hyperlink><w:r><w:t>. This allows you to filter out white parts by the size of their area.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[mask = bwareaopen(mask,100);
imshow(mask)]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Once you have a nice circle, you can ask MATLAB to </w:t></w:r><w:hyperlink w:docLocation="https://au.mathworks.com/help/images/detect-and-measure-circular-objects-in-an-image.html"><w:r><w:t>detect circles</w:t></w:r></w:hyperlink><w:r><w:t> in a given range of radii. Use this function to detect the two lemons. Plot the centers on top of the image.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[[centers,radii] = imfindcircles(mask,[20 50]);
hold on;
plot(centers(:,1),centers(:,2),'r*');]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:sectPr/></w:pPr></w:p><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="title"/><w:jc w:val="left"/></w:pPr><w:r><w:t>DESN1000 MATLAB Exercise 2 for Week 4</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Complete the task by filling in the missing pieces of the script. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>In this activity, we will practise our matrix indexing and coding loops. The problem statement is this: James is thinking of moving to a new neighbourhood. The neighbourhood has five </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>avenues</w:t></w:r><w:r><w:t> running north to south. They are called </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>first avenue</w:t></w:r><w:r><w:t>, </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>second avenue</w:t></w:r><w:r><w:t>, etc. There are also five streets running east to west. The city can therefore be represented as a 5x5 grid of blocks.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>James wants to know which block he should choose. He has gathered data on the price of housing on each block, the quality of the school on that block and also the rate of crime on that block (all ranked out of ten). If a block has a score of 10 in price, that means it is very expensive. A score of 10 for school quality is the best, and a score of 10 for crime is the worst. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>We are going to use the following equation to determine which block is the best:</w:t></w:r></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId1"/></w:customXmlPr><w:r><w:t>\textrm{Score}=\left(s-c-p\right)+3\times \left(\bar{s_a } +\bar{s_s } \right)+2\times \left(10-\left(\bar{p_a } +\bar{p_s } \right)\right)+\left(10-\left(\bar{c_a } +\bar{c_s } \right)\right)</w:t></w:r></w:customXml></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>where</w:t></w:r></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId2"/></w:customXmlPr><w:r><w:t>s=\;\textrm{shcool}\;\textrm{quality}\;\textrm{score}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId3"/></w:customXmlPr><w:r><w:t>p=\textrm{house}\;\textrm{price}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId4"/></w:customXmlPr><w:r><w:t>c=\textrm{crime}\;\textrm{rate}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId5"/></w:customXmlPr><w:r><w:t>\bar{s_a } =\textrm{mean}\;\textrm{of}\;\textrm{shcool}\;\textrm{quality}\;\textrm{scores}\;\textrm{on}\;\textrm{this}\;\textrm{avenue}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId6"/></w:customXmlPr><w:r><w:t>\bar{s_s } =\textrm{mean}\;\textrm{of}\;\textrm{shcool}\;\textrm{quality}\;\textrm{scores}\;\textrm{on}\;\textrm{this}\;\textrm{street}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId7"/></w:customXmlPr><w:r><w:t>\bar{p_a } =\textrm{mean}\;\textrm{of}\;\textrm{house}\;\textrm{prices}\;\textrm{on}\;\textrm{this}\;\textrm{avenue}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId8"/></w:customXmlPr><w:r><w:t>\bar{p_s } =\textrm{mean}\;\textrm{of}\;\textrm{house}\;\textrm{prices}\;\textrm{on}\;\textrm{this}\;\textrm{street}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId9"/></w:customXmlPr><w:r><w:t>\bar{c_a } =\textrm{mean}\;\textrm{crime}\;\textrm{rate}\;\textrm{on}\;\textrm{this}\;\textrm{avenue}\;</w:t></w:r></w:customXml></w:p><w:p><mc:AlternateContent xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"><mc:Choice Requires="R2018b"><w:pPr><w:pStyle w:val="heading2"/><w:jc w:val="left"/></w:pPr></mc:Choice><mc:Fallback><w:pPr><w:pStyle w:val="heading"/><w:jc w:val="left"/></w:pPr></mc:Fallback></mc:AlternateContent><w:customXml w:element="equation"><w:customXmlPr><w:attr w:name="displayStyle" w:val="true"/><w:attr w:name="encoding" w:val="mathml"/><w:attr w:name="relationshipId" w:val="rId10"/></w:customXmlPr><w:r><w:t>\bar{c_s } =\textrm{mean}\;\textrm{crime}\;\textrm{rate}\;\textrm{on}\;\textrm{this}\;\textrm{street}\;</w:t></w:r></w:customXml></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>The block with the highest score wins. First </w:t></w:r><w:hyperlink w:docLocation="https://au.mathworks.com/help/matlab/ref/load.html"><w:r><w:t>load</w:t></w:r></w:hyperlink><w:r><w:t> the data contained in data.mat. </w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[load('data.mat')]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Now create a </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>for-loop</w:t></w:r><w:r><w:t> with a counter called </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>row</w:t></w:r><w:r><w:t>, which increases from 1 to 5. For each iteration of the loop, print out the row number (you can do this with a line of code which is just "row". That will print the value of row on the command window. The better way to do this, however, is to use the following code:    disp("Row is "+string(row))).</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[for row = 1:5
    disp("Row is "+string(row))
end]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Now create another for-loop inside that one, which iterates </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>column</w:t></w:r><w:r><w:t> from 1 to 5. Print out both the row and the column using disp.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[for row = 1:5
    for column = 1:5
        disp("Row is "+string(row)+" and column is "+column)
    end
end]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Great! Now it's time to look at our data. For each block, we need to know the crime rate, house price and school quality. We also need the mean school quality of that avenue (column) and street (row). Remember that you can extract an entire row or column using the ":" symbol. Inside your loops, you can use the row and column variables to index the data. Complete the following lines and incorporate them into your code:</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[s_a = mean(schoolQuality(:,column));
s_s = mean(schoolQuality(row,:));]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[% Your code here
scores = zeros(5,5);
for row = 1:5
    for column = 1:5
        s_a = mean(schoolQuality(:,column));
        s_s = mean(schoolQuality(row,:));
        p_a = mean(price(:,column));
        p_s = mean(price(row,:));
        c_a = mean(crimeRate(:,column));
        c_s = mean(crimeRate(row,:));
        s = schoolQuality(row,column);
        p = price(row,column);
        c = crimeRate(row,column);
        score = (s-c-p)+1*(s_a+s_s)+2*(20-(p_s+p_a))+2*(20-(c_s+c_a));
        scores(row,column) = score;
    end
end]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Now you should be able to complete the code and calculate the score of each cell. However, we need a place to store this data. The easiest way to do that is is with a 5x5 matrix of scores. First, create an empty 5x5 matrix called </w:t></w:r><w:r><w:rPr><w:i/></w:rPr><w:t>scores</w:t></w:r><w:r><w:t> using the </w:t></w:r><w:hyperlink w:docLocation="https://au.mathworks.com/help/matlab/ref/zeros.html"><w:r><w:t>zeros</w:t></w:r></w:hyperlink><w:r><w:t> function. Then, in your loop, you can set scores(row,column) = score.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[% Your code here]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t>Finally, you can find the maximum score using the </w:t></w:r><w:hyperlink w:docLocation="https://au.mathworks.com/help/matlab/ref/max.html"><w:r><w:t>max</w:t></w:r></w:hyperlink><w:r><w:t> function. If you ask for the maximum of a matrix, MATLAB will give you the maximum of each column, and will return a row of all the maximums. You can then take the maximum of that output, which will give you the overall maximum. Note: You can ask the max function to return two variables, and it will give you the index (row or column) of the maximums that it found.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[[maxx ind] = max(scores)
scores]]></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="text"/><w:jc w:val="left"/></w:pPr><w:r><w:t></w:t></w:r></w:p></w:body></w:document>