function path = bug2Algo(grid)
    EMPTY = 0;
    WALL = 1;
    BLUE_OBSTACLE = 2;
    PLAYER = 3;
    GOAL = 4;
    RIGHT = [];
    LEFT = [];
    DOWN = [];
    UP = [];

    % Find player and goal positions
    [startX, startY] = find(grid == PLAYER);
    [goalX, goalY] = find(grid == GOAL);
    start = [startX(1), startY(1)];
    goal = [goalX(1), goalY(1)];
    
    % Anonymous function to check if a cell is free or is the goal
    isFree = @(x, y) grid(x, y) == EMPTY || grid(x, y) == GOAL;
    isObstacle = @(x, y) grid(x, y) == WALL || grid(x, y) == BLUE_OBSTACLE;
    
    path = [];
    current = start;
    
    % States: 1 = move to goal, 2 = follow obstacle
    state = 1;
    followStart = [];
    previous = [];
    i = 0
    
    while ~isequal(current, goal)
        direction = movementDir(start, goal);
        if direction == 'right'


    end
    
    path = [path; goal];
end
